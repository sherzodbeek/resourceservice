services:
  resourceservice:
    build:
      context: ./resourceservice
    container_name: resourceservice
    depends_on:
      - resourceservicedb
      - localstack
      - rabbit-mq
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://resourceservicedb:$RESOURCE_SERVICE_PORT/$RESOURCE_SERVICE_DB
      - SPRING_DATASOURCE_USERNAME=$RESOURCE_SERVICE_DB_USER
      - SPRING_DATASOURCE_PASSWORD=$RESOURCE_SERVICE_DB_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - config.aws.region=us-east-1
      - config.aws.s3.url=$LOCALSTACK_URL
      - config.aws.s3.bucket-name=$SONG_S3_BUCKET
      - config.aws.s3.access-key=$LOCALSTACK_ACCESS_KEY
      - config.aws.s3.secret-key=$LOCALSTACK_SECRET_KEY
      - spring.rabbitmq.host=$RABBIT_MQ_HOST
      - spring.rabbitmq.password=$RABBIT_MQ_PASSWORD
      - spring.rabbitmq.username=$RABBIT_MQ_USERNAME
      - spring.rabbitmq.port=$RABBIT_MQ_PORT
      - spring.rabbitmq.listener.simple.retry.enabled=true
      - spring.rabbitmq.listener.simple.retry.initial-interval=3s
      - spring.rabbitmq.listener.simple.retry.max-attempts=6
      - spring.rabbitmq.listener.simple.retry.max-interval=10s
      - spring.rabbitmq.listener.simple.retry.multiplier=2
      - resource.processor.queue=$RESOURCE_QUEUE
      - resource.processor.dl.queue=$RESOURCE_DL_QUEUE
    ports:
      - $RESOURCE_SERVICE_LOCAL_PORT:$RESOURCE_SERVICE_DOCKER_PORT
    networks:
      - app-network

  songservice:
    build:
      context: ./songservice
    container_name: songservice
    depends_on:
      - songservicedb
      - localstack
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://songservicedb:$SONG_SERVICE_PORT/$SONG_SERVICE_DB
      - SPRING_DATASOURCE_USERNAME=$SONG_SERVICE_DB_USER
      - SPRING_DATASOURCE_PASSWORD=$SONG_SERVICE_DB_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - $SONG_SERVICE_LOCAL_PORT:$SONG_SERVICE_DOCKER_PORT
    networks:
      - app-network

  resourceservicedb:
    image: 'postgres:16-alpine'
    container_name: resourceservicedb
    environment:
      - POSTGRES_USER=$RESOURCE_SERVICE_DB_USER
      - POSTGRES_PASSWORD=$RESOURCE_SERVICE_DB_PASSWORD
    volumes:
      - ./resourceservice/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  songservicedb:
    image: 'postgres:16-alpine'
    container_name: songservicedb
    environment:
      - POSTGRES_USER=$SONG_SERVICE_DB_USER
      - POSTGRES_PASSWORD=$SONG_SERVICE_DB_PASSWORD
    volumes:
      - ./songservice/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

#  eurekaserver:
#    build:
#      context: ./eurekaserver
#    container_name: eurekaserver
#    ports:
#      - $EUREKA_SERVER_LOCAL_PORT:$EUREKA_SERVER_DOCKER_PORT
#    networks:
#      - app-network

  localstack:
    container_name: localstack
    image: localstack/localstack:s3-latest
    ports:
      - "4566:4566"
    volumes:
      - "./localstack/init-s3.py:/etc/localstack/init/ready.d/init-s3.py"
    networks:
      - app-network

  rabbit-mq:
    build:
      context: ./rabbitmq
    container_name: rabbit-mq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app-network

  resource-processor:
    depends_on:
      - rabbit-mq
      - resourceservice
      - songservice
    build:
      context: ./resourceprocessor
    container_name: resource-processor
    environment:
      - song.service.url=$SONG_SERVICE_URL
      - song.service.name=song-service
      - resource.service.url=$RESOURCE_SERVICE_URL
      - resource.service.name=resource-service
      - spring.rabbitmq.host=$RABBIT_MQ_HOST
      - spring.rabbitmq.password=$RABBIT_MQ_PASSWORD
      - spring.rabbitmq.username=$RABBIT_MQ_USERNAME
      - spring.rabbitmq.port=$RABBIT_MQ_PORT
      - spring.rabbitmq.listener.simple.retry.enabled=true
      - spring.rabbitmq.listener.simple.retry.initial-interval=3s
      - spring.rabbitmq.listener.simple.retry.max-attempts=5
      - spring.rabbitmq.listener.simple.retry.max-interval=10s
      - spring.rabbitmq.listener.simple.retry.multiplier=2
      - resource.processor.queue=uploaded-resource-queue
    networks:
      - app-network

networks:
  app-network: